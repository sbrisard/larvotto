<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="larvotto_8hpp" kind="file" language="C++">
    <compoundname>larvotto.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">array</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="5">
        <label>string</label>
      </node>
      <node id="3">
        <label>array</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>c:/Users/sbrisard/Git/programmes/larvotto/include/larvotto/larvotto.hpp</label>
        <link refid="larvotto_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <innerclass refid="classlarvotto_1_1_simulation_box" prot="public">larvotto::SimulationBox</innerclass>
    <innernamespace refid="namespacelarvotto">larvotto</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="larvotto_8hpp_1af83a0ad9d707a0bc5fe281b6e5c358a1" prot="public" static="no">
        <name>DllExport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/Users/sbrisard/Git/programmes/larvotto/include/larvotto/larvotto.hpp" line="6" column="10" bodyfile="c:/Users/sbrisard/Git/programmes/larvotto/include/larvotto/larvotto.hpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DllExport<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DllExport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">larvotto<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal">std::string<sp/>author();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">std::string<sp/>version();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>return_one();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">std::string<sp/>repr(Iterator<sp/>begin,<sp/>Iterator<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>stream;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>begin;<sp/>i<sp/>&lt;<sp/>end;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>*i;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>end<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream.str();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM&gt;</highlight></codeline>
<codeline lineno="50" refid="classlarvotto_1_1_simulation_box" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlarvotto_1_1_simulation_box" kindref="compound">SimulationBox</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;double,<sp/>DIM&gt;<sp/><ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classlarvotto_1_1_simulation_box_1a37b149461f7622b135b150d20730b51d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::array&lt;double,<sp/>DIM&gt;<sp/><ref refid="classlarvotto_1_1_simulation_box_1a37b149461f7622b135b150d20730b51d" kindref="member">Vector</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classlarvotto_1_1_simulation_box_1a67f0fea2548d26d4de400d769331558c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classlarvotto_1_1_simulation_box_1a67f0fea2548d26d4de400d769331558c" kindref="member">SimulationBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlarvotto_1_1_simulation_box_1a37b149461f7622b135b150d20730b51d" kindref="member">Vector</ref><sp/><ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>)<sp/>:<sp/><ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>(<ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>){};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classlarvotto_1_1_simulation_box_1a2172693ac05e3ae511f877dcde16372f" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>std::string<sp/><ref refid="classlarvotto_1_1_simulation_box_1a2172693ac05e3ae511f877dcde16372f" kindref="member">repr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>stream;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SimulationBox&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>DIM</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;(L=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>larvotto::repr(<ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>.cbegin(),<sp/><ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>.cend())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream.str();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classlarvotto_1_1_simulation_box_1a46464590943b4cd3c5a8529b0a850da5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlarvotto_1_1_simulation_box_1a37b149461f7622b135b150d20730b51d" kindref="member">Vector</ref><sp/><ref refid="classlarvotto_1_1_simulation_box_1a46464590943b4cd3c5a8529b0a850da5" kindref="member">minimum_image</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlarvotto_1_1_simulation_box_1a37b149461f7622b135b150d20730b51d" kindref="member">Vector</ref><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlarvotto_1_1_simulation_box_1a37b149461f7622b135b150d20730b51d" kindref="member">Vector</ref><sp/>y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlarvotto_1_1_simulation_box_1a37b149461f7622b135b150d20730b51d" kindref="member">Vector</ref><sp/>r{};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DIM;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>y[i]<sp/>-<sp/>x[i];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>*<sp/>r[i]<sp/>&gt;<sp/><ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>-=<sp/><ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>[i];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>*<sp/>r[i]<sp/>&lt;<sp/>-<ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>+=<sp/><ref refid="classlarvotto_1_1_simulation_box_1af9ef5c2d2d6bd61bf0d557d32b8c7d41" kindref="member">L</ref>[i];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SimulationBox&lt;DIM&gt;<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>box.repr();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>larvotto</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="c:/Users/sbrisard/Git/programmes/larvotto/include/larvotto/larvotto.hpp"/>
  </compounddef>
</doxygen>
